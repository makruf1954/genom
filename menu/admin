#!/bin/bash
clear

# =============================================
#           [ Konfigurasi Warna ]
# =============================================
export RED='\033[0;31m'
export GREEN='\033[0;32m'
export YELLOW='\033[0;33m'
export BLUE='\033[0;34m'
export CYAN='\033[0;36m'
export NC='\033[0m'
export ORANGE='\033[0;91m'

# Variabel Warna untuk Tema (akan dimuat dari file)
export COLOR1=""
export COLBG1=""
export WH='\033[1;37m' # Warna putih, sering digunakan untuk teks

# Konfigurasi File
export COLOR_CONF="/etc/phreakers/theme/color.conf" # Pastikan path ini benar
export AUTHOR_FILE="/etc/phreakers/theme/author.conf" # Contoh file untuk menyimpan informasi penulis

# Fungsi untuk memuat warna dari konfigurasi tema
load_colors() {
    if [ -f "$COLOR_CONF" ]; then
        colornow=$(cat "$COLOR_CONF")
    else
        # Tema default jika file tidak ditemukan
        colornow="cyan"
        mkdir -p /etc/phreakers/theme/ 2>/dev/null
        echo "$colornow" > "$COLOR_CONF"
        echo "HOKAGE LEGEND STORE" > "$AUTHOR_FILE" # Contoh inisialisasi file penulis
    fi

    # Menentukan warna berdasarkan tema yang dipilih
    case "$colornow" in
        "red")
            COLOR1='\033[0;31m'
            COLBG1='\033[41;37m'
            ;;
        "green")
            COLOR1='\033[0;32m'
            COLBG1='\033[42;37m'
            ;;
        "yellow")
            COLOR1='\033[0;33m'
            COLBG1='\033[43;37m'
            ;;
        "blue")
            COLOR1='\033[0;34m'
            COLBG1='\033[44;37m'
            ;;
        "magenta")
            COLOR1='\033[0;35m'
            COLBG1='\033[45;37m'
            ;;
        "cyan")
            COLOR1='\033[0;36m'
            COLBG1='\033[46;37m'
            ;;
        *)
            # Kembali ke default jika warna tidak valid
            COLOR1='\033[0;36m'
            COLBG1='\033[46;37m'
            ;;
    esac
}

# =============================================
#           [ Fungsi Pengecekan IP ]
# =============================================
check_ip_and_get_info() {
    local ip=$1
    # Loop melalui setiap baris dalam permission_file
    while IFS= read -r line; do
        local cleaned_line=$(echo "$line" | tr -d '\r' | sed 's/[^[:print:]]//g' | xargs)

        # Pisahkan baris menjadi array
        read -ra fields <<< "$cleaned_line"

        # Kolom 4 = IP Address (indeks 3)
        if [[ "${fields[3]}" == "$ip" ]]; then
            client_name="${fields[1]}"  # Kolom 2
            exp_date="${fields[2]}"      # Kolom 3

            # Bersihkan tanggal dari karakter khusus
            exp_date=$(echo "$exp_date" | sed 's/[^0-9-]//g' | xargs)
            return 0
        fi
    done <<< "$permission_file"
    return 1
}

# =============================================
#           [ Main Script - Bagian Awal Validasi Akses ]
# =============================================

# Ambil data dari GitHub dengan timeout
permission_file=$(curl -sL --connect-timeout 10 https://github.com/hokagelegend9999/ijin/raw/refs/heads/main/genom-pro)

# Validasi file permission
if [ -z "$permission_file" ]; then
    echo -e "${RED}${BOLD}üö´ Akses Ditolak!${NC}"
    echo -e "${YELLOW}üîê IP Anda tidak terdaftar dalam sistem.${NC}"
    echo -e "${CYAN}‚ö†Ô∏è Khusus untuk pengguna ${BOLD}GENOM PRO${NC}${CYAN} dan ${BOLD}ADMIN${NC}${CYAN}.${NC}"
    echo -e "${CYAN}üìû Hubungi: ${BOLD}‚ú¶ @HokageLegend ‚ú¶${NC}"
    exit 1
fi

# Ambil IP VPS dengan metode alternatif
IP_VPS=$(curl -s ipv4.icanhazip.com)

# =============================================
#           [ Pengecekan IP & Lisensi ]
# =============================================
echo -e "${GREEN}‚åõ Memeriksa lisensi...${NC}"
if check_ip_and_get_info "$IP_VPS"; then
    # Validasi format tanggal ISO 8601
    if ! [[ "$exp_date" =~ ^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$ ]]; then
        echo -e "${RED}‚ùå Format tanggal invalid: '$exp_date' (harus YYYY-MM-DD)${NC}"
        exit 1
    fi

    # Validasi tanggal menggunakan date
    if ! date -d "$exp_date" "+%s" &>/dev/null; then
        echo -e "${RED}‚ùå Tanggal tidak valid secara kalender: $exp_date${NC}"
        exit 1
    fi
else
    echo -e "${RED}${BOLD}üö´ Akses Ditolak!${NC}"
    echo -e "${YELLOW}üîê IP Anda tidak terdaftar dalam sistem.${NC}"
    echo -e "${CYAN}‚ö†Ô∏è Khusus untuk pengguna ${BOLD}GENOM PRO${NC}${CYAN} dan ${BOLD}ADMIN${NC}${CYAN}.${NC}"
    echo -e "${CYAN}üìû Hubungi: ${BOLD}‚ú¶ @HokageLegend ‚ú¶${NC}"
    exit 1
fi

# =============================================
#           [ Hitung Hari Tersisa ]
# =============================================
current_epoch=$(date +%s)
exp_epoch=$(date -d "$exp_date" +%s)

if (( exp_epoch < current_epoch )); then
    echo -e "${RED}‚ùå Masa aktif telah habis!${NC}"
    exit 1
fi

days_remaining=$(( (exp_epoch - current_epoch) / 86400 ))

# =============================================
#           [ Pengecekan Dependency ]
# =============================================
if ! command -v jq &>/dev/null; then
    echo -e "${YELLOW}‚ö†Ô∏è Menginstal jq...${NC}"
    sudo apt-get update -y > /dev/null
    sudo apt-get install jq -y > /dev/null
fi

# =============================================
#           [ Fungsi Pengambilan Informasi Sistem & Jaringan ]
# =============================================

# System Information
get_sys_info() {
    # Deteksi OS yang lebih tangguh
    if command -v lsb_release &>/dev/null; then
        OS=$(lsb_release -ds | sed 's/"//g')
    elif [ -f /etc/os-release ]; then
        OS=$(grep -E '^PRETTY_NAME|^NAME' /etc/os-release | head -n1 | cut -d'=' -f2 | sed 's/"//g')
    elif [ -f /etc/debian_version ]; then
        OS="Debian $(cat /etc/debian_version)"
    elif [ -f /etc/redhat-release ]; then
        OS=$(cat /etc/redhat-release)
    else
        OS="Linux Unknown"
    fi
    MODEL2="$OS" # Menggunakan MODEL2 untuk tampilan yang konsisten

    SERONLINE=$(uptime -p | cut -d " " -f 2-10000)

    # Info Memori
    RAM=$(free -m | awk '/Mem:/ {printf "%.0fM", $2}')
    uram=$(free -h | awk '/Mem:/ {print $3}')
    tram=$(free -h | awk '/Mem:/ {print $2}')

    # Info CPU
    CORE=$(nproc) # Menggunakan nproc untuk Core CPU
    CPU_USAGE=$(top -bn1 | awk '/Cpu/ {printf "%.1f%%", 100 - $8}')
    cpu_usage1="$(ps aux | awk 'BEGIN {sum=0} {sum+=$3}; END {print sum}')"
    cpu_usage="$((${cpu_usage1/\.*} / ${CORE:-1}))"
    cpu_usage+=" %"
}

# Network Information
get_net_info() {
    # Alamat IP
    IPVPS=$(curl -s4 --connect-timeout 3 ifconfig.me || echo "Unknown")
    ISP=$(curl -s --connect-timeout 3 ip-api.com/json/"${IPVPS}" | grep -Po '"isp":\s*"\K[^"]*' || echo "Unknown")
    CITY=$(curl -s --connect-timeout 3 ip-api.com/json/"${IPVPS}" | grep -Po '"city":\s*"\K[^"]*' || echo "Unknown")

    if [ -z "$ISP" ]; then
        ISP=$(curl -s ipapi.co/org)
    fi
    if [ -z "$CITY" ]; then
        CITY=$(curl -s ipapi.co/city)
    fi

    # Info Domain
    DOMAIN=$(cat /etc/xray/domain 2>/dev/null || echo "Not Set")
}

# Perhitungan Uptime
get_uptime() {
    uptime_sec=$(awk '{print $1}' /proc/uptime | cut -d. -f1)
    days=$((uptime_sec/86400))
    hours=$(( (uptime_sec%86400)/3600 ))
    minutes=$(( (uptime_sec%3600)/60 ))

    if [ $days -gt 0 ]; then
        echo "${days}d ${hours}h ${minutes}m"
    else
        echo "${hours}h ${minutes}m"
    fi
}

# Status Sertifikat (Contoh variabel, sesuaikan dengan sumber data Anda)
Exp2="2025-12-31" # Contoh, ganti dengan cara Anda mendapatkan tanggal Exp2
today=$(date +"%Y-%m-%d")

d1=$(date -d "$Exp2" +%s)
d2=$(date -d "$today" +%s)
certificate=$(( (d1 - d2) / 86400 ))

# IP, Waktu, Tanggal
WKT=$(curl -s ipinfo.io/timezone) # Tanpa token jika tidak diperlukan
DAY=$(date +%A)
DATE=$(date +%m/%d/%Y)
DATE2=$(date -R | cut -d " " -f -5)
MYIP=$(curl -sS ipv4.icanhazip.com)

# Membuat direktori dan file yang diperlukan jika belum ada
cd
if [ ! -d /etc/per ]; then
    mkdir -p /etc/per
    echo "" > /etc/per/id
    echo "" > /etc/per/token
fi
if [ ! -d /etc/perlogin ]; then
    mkdir -p /etc/perlogin
    echo "" > /etc/perlogin/id
    echo "" > /etc/perlogin/token
fi
if [ ! -f /usr/bin/idchat ]; then
    echo "" > /usr/bin/idchat
    echo "" > /usr/bin/token
fi

if [ ! -f /etc/xray/ssh ]; then
    echo "" > /etc/xray/ssh
fi
if [ ! -d /etc/xray/sshx ]; then
    mkdir -p /etc/xray/sshx
fi
if [ ! -f /etc/xray/sshx/listlock ]; then
    echo "" > /etc/xray/sshx/listlock
fi
if [ ! -d /etc/vmess ]; then
    mkdir -p /etc/vmess
fi
if [ ! -f /etc/vmess/listlock ]; then
    echo "" > /etc/vmess/listlock
fi
if [ ! -d /etc/vless ]; then
    mkdir -p /etc/vless
fi
if [ ! -f /etc/vless/listlock ]; then
    echo "" > /etc/vless/listlock
fi
if [ ! -d /etc/trojan ]; then
    mkdir -p /etc/trojan
fi
if [ ! -f /etc/trojan/listlock ]; then
    echo "" > /etc/trojan/listlock
fi

# Penggunaan Vnstat
vnstat_profile=$(vnstat | sed -n '3p' | awk '{print $1}' | grep -o '[^:]*')
if [ -z "$vnstat_profile" ]; then
    echo -e "${RED}‚ö†Ô∏è Profil Vnstat tidak ditemukan. Pastikan vnstat terinstal dan berjalan.${NC}"
    today_rx="N/A"
    today_tx="N/A"
    month_rx="N/A"
    month_tx="N/A"
    yesterday_rx="N/A"
    yesterday_tx="N/A"
else
    vnstat -i "${vnstat_profile}" >/etc/t1 # Menulis output vnstat ke file sementara
    bulan=$(date +%b)
    tahun=$(date +%y)
    ba=$(curl -s https://pastebin.com/raw/0gWiX6hE || echo "")
    
    today_rx=$(vnstat -i "${vnstat_profile}" | grep today | awk '{print $2}')
    today_rxv=$(vnstat -i "${vnstat_profile}" | grep today | awk '{print $3}')
    today_tx=$(vnstat -i "${vnstat_profile}" | grep today | awk '{print $5}')
    today_txv=$(vnstat -i "${vnstat_profile}" | grep today | awk '{print $6}')

    if [ "$(grep -wc "${bulan}" /etc/t1)" != '0' ]; then
        month_rx=$(vnstat -i "${vnstat_profile}" | grep "${bulan} ${ba}${tahun}" | awk '{print $3}')
        month_rxv=$(vnstat -i "${vnstat_profile}" | grep "${bulan} ${ba}${tahun}" | awk '{print $4}')
        month_tx=$(vnstat -i "${vnstat_profile}" | grep "${bulan} ${ba}${tahun}" | awk '{print $6}')
        month_txv=$(vnstat -i "${vnstat_profile}" | grep "${bulan} ${ba}${tahun}" | awk '{print $7}')
    else
        bulan2=$(date +%Y-%m)
        month_rx=$(vnstat -i "${vnstat_profile}" | grep "${bulan2} " | awk '{print $2}')
        month_rxv=$(vnstat -i "${vnstat_profile}" | grep "${bulan2} " | awk '{print $3}')
        month_tx=$(vnstat -i "${vnstat_profile}" | grep "${bulan2} " | awk '{print $5}')
        month_txv=$(vnstat -i "${vnstat_profile}" | grep "${bulan2} " | awk '{print $6}')
    fi
    
    if [ "$(grep -wc yesterday /etc/t1)" != '0' ]; then
        yesterday_rx=$(vnstat -i "${vnstat_profile}" | grep yesterday | awk '{print $2}')
        yesterday_rxv=$(vnstat -i "${vnstat_profile}" | grep yesterday | awk '{print $3}')
        yesterday_tx=$(vnstat -i "${vnstat_profile}" | grep yesterday | awk '{print $5}')
        yesterday_txv=$(vnstat -i "${vnstat_profile}" | grep yesterday | awk '{print $6}')
    else
        yesterday_rx="NULL"
        yesterday_rxv="NULL"
        yesterday_tx="NULL"
        yesterday_txv="NULL"
    fi
    rm -f /etc/t1 # Hapus file sementara
fi

# =============================================
#           [ Pengecekan Status Layanan ]
# =============================================

# // SSH Websocket Proxy
ssh_ws=$( systemctl status ws-stunnel | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
if [[ "$ssh_ws" == "running" ]]; then
    status_ws="${COLOR1}ON${NC}"
else
    status_ws="${RED}OFF${NC}"
fi

# // Nginx
nginx=$( systemctl status nginx | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
if [[ "$nginx" == "running" ]]; then
    status_nginx="${COLOR1}ON${NC}"
else
    status_nginx="${RED}OFF${NC}"
    systemctl start nginx 2>/dev/null # Mencoba memulai Nginx jika mati
fi

# // Dropbear
dropbear_status=$(/etc/init.d/dropbear status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
if [[ "$dropbear_status" == "running" ]]; then
   status_beruangjatuh="${COLOR1}ON${NC}"
else
   status_beruangjatuh="${RED}OFF${NC}"
fi

# // Xray
xray=$(systemctl status xray | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
if [[ "$xray" == "running" ]]; then
    status_xray="${COLOR1}ON${NC}"
else
    status_xray="${RED}OFF${NC}"
fi

# STATUS EXPIRED ACTIVE (Sudah diperbaiki)
Green_font_prefix="\033[32m" && Red_font_prefix="\033[31m" && Green_background_prefix="\033[42;37m" && Red_background_prefix="\033[41;37m" && Font_color_suffix="\033[0m"
Info="${Green_font_prefix}( Registered )${Font_color_suffix}"
Error="${Green_font_prefix}${Font_color_suffix}${Red_font_prefix}[ EXPIRED ]${Font_color_suffix}"

# Ambil nilai Exp2 dari sumber yang valid, contoh:
# Exp2=$(cat /etc/xray/exp_date_xray)
# Jika tidak ada sumber spesifik, gunakan contoh atau kosongkan
#today=$(date +"%Y-%m-%d") # Sudah didefinisikan sebelumnya

if [[ "$today" < "$Exp2" ]]; then
    sts="${Info}"
else
    sts="${Error}"
fi

# TOTAL ACC CREATE VMESS WS
vmess=$(grep -c -E "^#vmg " "/etc/xray/config.json")
# TOTAL ACC CREATE  VLESS WS
vless=$(grep -c -E "^#vlg " "/etc/xray/config.json")
# TOTAL ACC CREATE  TROJAN
trtls=$(grep -c -E "^#trg " "/etc/xray/config.json")
# TOTAL ACC CREATE OVPN SSH
total_ssh=$(grep -c -E "^### " "/etc/xray/ssh")

# =============================================
#           [ FUNGSI MENU TEMA ]
# =============================================
show_header_theme() {
    echo -e " ${COLOR1}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e " ${COLOR1}‚ïë${COLBG1}              ${WH}‚Ä¢ THEMES PANEL MENU ‚Ä¢            ${NC}${COLOR1}‚ïë"
    echo -e " ${COLOR1}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
}

show_options_theme() {
    echo -e " ${COLOR1}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e " ${COLOR1}‚ïë ${WH}[01]${NC} ${COLOR1}‚Ä¢ ${WH}COLOR RED         ${WH}[04]${NC} ${COLOR1}‚Ä¢ ${WH}COLOR GREEN      ${COLOR1}‚ïë${NC}"
    echo -e " ${COLOR1}‚ïë ${WH}[02]${NC} ${COLOR1}‚Ä¢ ${WH}COLOR YELLOW      ${WH}[05]${NC} ${COLOR1}‚Ä¢ ${WH}COLOR BLUE       ${COLOR1}‚ïë${NC}"
    echo -e " ${COLOR1}‚ïë ${WH}[03]${NC} ${COLOR1}‚Ä¢ ${WH}COLOR MAGENTA     ${WH}[06]${NC} ${COLOR1}‚Ä¢ ${WH}COLOR CYAN       ${COLOR1}‚ïë${NC}"
    echo -e " ${COLOR1}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
}

show_footer_theme() {
    local author=$(cat "$AUTHOR_FILE" 2>/dev/null || echo "Unknown")
    echo -e " ${COLOR1}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ${WH}CREDIT BY${NC} ${COLOR1}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e " ${COLOR1}‚ïë                 ${WH}‚Ä¢ HOKAGE LEGEND STORE ‚Ä¢                 ${COLOR1}‚ïë${NC}"
    echo -e " ${COLOR1}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
}

change_theme() {
    local new_color=$1
    echo "${new_color}" > "${COLOR_CONF}"
    load_colors # Muat ulang warna setelah perubahan
    echo -e ""
    echo -e "  ${COLOR1}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo -e "      ${WH}SUCCESS: ${COLOR1}Tema berhasil diubah menjadi ${WH}${new_color}${NC}"
    sleep 1
}

# Fungsi untuk menampilkan menu tema
m-theme() {
    clear
    show_header_theme
    show_options_theme
    show_footer_theme

    echo -ne "\n ${WH}Pilih menu ${COLOR1}: ${WH}"
    read -r colormenu

    case $colormenu in
        01|1) change_theme "red" ;;
        02|2) change_theme "yellow" ;;
        03|3) change_theme "magenta" ;;
        04|4) change_theme "green" ;;
        05|5) change_theme "blue" ;;
        06|6) change_theme "cyan" ;;
        00|0) clear; menu ;; # Kembali ke menu utama
        *) echo -e "${RED}Pilihan tidak valid!${NC}"; sleep 1; m-theme ;; # Tetap di menu tema jika input salah
    esac

    echo -e "\n${NC}"
    read -n 1 -s -r -p "     Tekan sembarang tombol untuk kembali ke menu utama..."
    clear
    menu # Pastikan menu utama dipanggil setelah interaksi dengan menu tema
}

# =============================================
#           [ FUNGSI MANAJEMEN DOMAIN ]
# =============================================
function domain() {
    # Fungsi progress bar
    fun_bar() {
        local cmd=("$@")
        (
            eval "${cmd[@]}" >/dev/null 2>&1
            touch /tmp/fim
        ) &
        
        echo -ne "  ${COLOR1}Memproses... ["
        while [ ! -f /tmp/fim ]; do
            echo -ne "#"
            sleep 0.2
        done
        rm -f /tmp/fim
        echo -e "]${NC} Selesai!"
    }

    # Fungsi instalasi slowdns
    install_slowdns() {
        local script_url="https://raw.githubusercontent.com/hokagelegend9999/genom/refs/heads/main/SLOWDNS/installsl.sh"
        local output_file="installsl.sh"
        
        echo -e "${COLOR1}Mengunduh SlowDNS...${NC}"
        wget --no-check-certificate -q "$script_url" -O "$output_file" || {
            echo -e "${RED}Gagal mengunduh script!${NC}"
            return 1
        }
        
        chmod +x "$output_file"
        echo -e "${COLOR1}Memulai instalasi...${NC}"
        ./"$output_file"
        
        # Pembersihan
        rm -f "$output_file"
        echo -e "${COLOR1}Instalasi selesai!${NC}"
    }
    
    # Fungsi setup domain utama
    setup_main_domain() {
        clear
        echo -e "${COLOR1}‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê${NC}"
        echo -e "${COLOR1}‚îÇ ${WH}        PEMBUATAN DOMAIN CUSTOM         ${NC}"
        echo -e "${COLOR1}‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò${NC}"

        until [[ $dn1 =~ ^[a-zA-Z0-9_.-]+$ ]]; do
            read -rp "Masukan subdomain Anda di sini (tanpa spasi): " -e dn1
        done
        echo "$dn1" > /etc/xray/domain
        echo "$dn1" > /root/subdomainx
        cd
        sleep 1
        fun_bar 'echo "Dummy command for progress bar"'
        clear
        rm -rf /root/subdomainx
        read -n 1 -s -r -p "  Tekan sembarang tombol untuk Memperbarui Sertifikat atau Ctrl + C untuk Keluar"
        certv2ray
        clear
    }

    # Menu utama domain
    show_domain_menu() {
        clear
        echo -e "${COLOR1}‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê${NC}"
        echo -e "${COLOR1}‚îÇ ${WH}       PILIHAN KONFIGURASI DOMAIN       ${NC}"
        echo -e "${COLOR1}‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§${NC}"
        echo -e "${COLOR1}‚îÇ [1] Domain Custom                        ${NC}"
        echo -e "${COLOR1}‚îÇ [2] Instal SlowDNS                       ${NC}"
        echo -e "${COLOR1}‚îÇ [0] Kembali ke Menu Utama                ${NC}"
        echo -e "${COLOR1}‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò${NC}"
    }

    # Handler menu domain
    while true; do
        show_domain_menu
        read -p " Pilih opsi [0-2] : " choice
        
        case $choice in
            1)
                setup_main_domain
                read -n 1 -s -r -p " Tekan sembarang tombol untuk melanjutkan..."
                ;;
            2)
                install_slowdns
                read -n 1 -s -r -p " Instalasi selesai! Tekan tombol untuk melanjutkan..."
                ;;
            0)
                menu # Kembali ke menu utama setelah selesai
                break
                ;;
            *)
                echo -e "${RED}Pilihan tidak valid!${NC}"
                sleep 1
                ;;
        esac
    done
}

# =============================================
#           [ FUNGSI SERTIFIKAT XRAY ]
# =============================================
function certv2ray(){
echo -e ""
echo "Memulai pembaruan sertifikat..."
sleep 0.5
source /var/lib/ipvps.conf 2>/dev/null
domain=$(cat /etc/xray/domain 2>/dev/null)
if [ -z "$domain" ]; then
    echo -e "${RED}‚ùå Domain belum diatur. Harap atur domain terlebih dahulu.${NC}"
    sleep 2
    menu
    return 1
fi
STOPWEBSERVER=$(lsof -i:89 -t | awk '{print $1}')
if [ -n "$STOPWEBSERVER" ]; then
    kill "$STOPWEBSERVER" 2>/dev/null
    echo -e "${YELLOW}Menghentikan proses di port 89...${NC}"
    sleep 1
fi
systemctl stop nginx 2>/dev/null

rm -rf /root/.acme.sh
mkdir -p /root/.acme.sh

curl https://acme-install.netlify.app/acme.sh -o /root/.acme.sh/acme.sh
chmod +x /root/.acme.sh/acme.sh
/root/.acme.sh/acme.sh --register-account -m hokage.cfd
/root/.acme.sh/acme.sh --upgrade --auto-upgrade
/root/.acme.sh/acme.sh --set-default-ca --server letsencrypt
/root/.acme.sh/acme.sh --issue -d "$domain" --standalone -k ec-256

if [ $? -eq 0 ]; then
    echo -e "${GREEN}Sertifikat berhasil diterbitkan. Menginstal...${NC}"
    ~/.acme.sh/acme.sh --installcert -d "$domain" --fullchainpath /etc/xray/xray.crt --keypath /etc/xray/xray.key --ecc
    chmod 777 /etc/xray/xray.key
    systemctl restart nginx 2>/dev/null
    systemctl restart xray
    echo -e "${GREEN}Sertifikat Xray berhasil diperbarui!${NC}"
else
    echo -e "${RED}‚ùå Gagal menerbitkan sertifikat. Periksa domain atau konfigurasi DNS Anda.${NC}"
fi
sleep 2
menu
}

# =============================================
#           [ FUNGSI CLEAR CACHE RAM ]
# =============================================
function clearcache(){
clear
echo ""
echo ""
echo -e "[ ${GREEN}Info${NC} ] Membersihkan Cache RAM"
echo 1 > /proc/sys/vm/drop_caches
sleep 3
echo -e "[ ${GREEN}OK${NC} ] Cache berhasil dibersihkan"
echo ""
echo "Kembali ke menu dalam 3 detik..."
sleep 3
menu
}

# =============================================
#           [ FUNGSI SETUP BOT ]
# =============================================
function bot2(){
clear
echo -e "$COLOR1‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê${NC}"
echo -e "$COLOR1      ${WH}Silakan pilih jenis Bot di bawah ini     ${NC}"
echo -e "$COLOR1‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò${NC}"
echo -e "$COLOR1‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê${NC}"
echo -e "$COLOR1  [ 1 ] ${WH}Buat BOT INFO (Pembuatan User & Lain-lain)${NC}"
echo -e ""
echo -e "$COLOR1  [ 2 ] ${WH}Buat BOT INFO Backup Telegram        ${NC}"
echo -e "$COLOR1  [ 0 ] ${WH}Kembali ke Menu Utama                ${NC}"
echo -e "$COLOR1‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò${NC}"
read -p "  Pilih opsi [0-2] : " bot
echo ""
if [[ "$bot" == "1" ]]; then
    clear
    rm -rf /etc/per
    mkdir -p /etc/per
    cd /etc/per || exit
    touch token
    touch id
    echo -e ""
    echo -e "$COLOR1 [ INFO ] ${WH}Konfigurasi untuk database Akun dan Lain-lain"
    read -rp "Masukkan Token Bot (Buat di @BotFather) : " -e token3
    echo "$token3" > token
    read -rp "Masukkan ID Anda (Cek di @userinfobot) : " -e idat2
    echo "$idat2" > id
    sleep 1
    bot2 # Kembali ke menu bot
elif [[ "$bot" == "2" ]]; then
    clear
    rm -f /usr/bin/token
    rm -f /usr/bin/idchat
    echo -e ""
    echo -e "$COLOR1 [ INFO ] ${WH}Konfigurasi untuk database Backup Telegram"
    read -rp "Masukkan Token Bot (Buat di @BotFather) : " -e token23
    echo "$token23" > /usr/bin/token
    read -rp "Masukkan ID Anda (Cek di @userinfobot) : " -e idchat
    echo "$idchat" > /usr/bin/idchat
    sleep 1
    bot2 # Kembali ke menu bot
elif [[ "$bot" == "0" ]]; then
    menu # Kembali ke menu utama
else
    echo -e "${RED}Pilihan tidak valid!${NC}"
    sleep 1
    bot2 # Ulangi menu bot
fi
}

# =============================================
#           [ FUNGSI GOTOP (MONITORING CPU) ]
# =============================================
function gotopp(){
cd
if [[ -e /usr/bin/gotop ]]; then
    gotop
else
    echo -e "${YELLOW}Menginstal gotop...${NC}"
    git clone --depth 1 https://github.com/cjbassi/gotop /tmp/gotop &> /dev/null
    /tmp/gotop/scripts/download.sh &> /dev/null
    chmod +x /tmp/gotop/gotop
    mv /tmp/gotop/gotop /usr/bin/gotop
    rm -rf /tmp/gotop
    if [[ -e /usr/bin/gotop ]]; then
        echo -e "${GREEN}Gotop berhasil diinstal!${NC}"
        gotop
    else
        echo -e "${RED}Gagal menginstal gotop.${NC}"
        sleep 2
    fi
fi
menu # Kembali ke menu utama setelah keluar dari gotop
}

# =============================================
#           [ FUNGSI CORE MENU XRAY ]
# =============================================
function coremenu(){
cd
if [[ ! -e /usr/local/bin/modxray ]]; then
    echo -e "${YELLOW}Mengunduh Xray Core Mod...${NC}"
    wget -O /usr/local/bin/modxray https://github.com/dharak36/Xray-core/releases/download/v1.0.0/xray.linux.64bit &> /dev/null
    chmod 755 /usr/local/bin/modxray
fi
if [[ ! -e /usr/local/bin/offixray ]]; then
    echo -e "${YELLOW}Menyalin Xray Core Official...${NC}"
    cp /usr/local/bin/xray /usr/local/bin/offixray &> /dev/null
    chmod 755 /usr/local/bin/offixray
fi
clear
echo -e " "
echo -e "$COLOR1‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê${NC}"
echo -e "$COLOR1‚îÇ ${WH}Silakan pilih pilihan Anda untuk Mengatur CORE MENU${NC}"
echo -e "$COLOR1‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò${NC}"
echo -e "$COLOR1‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê${NC}"
echo -e "$COLOR1‚îÇ  [ 1 ]  ${WH}XRAY CORE OFFICIAL          ${NC}"
echo -e "$COLOR1‚îÇ"
echo -e "$COLOR1‚îÇ  [ 2 ]  ${WH}XRAY CORE MOD               ${NC}"
echo -e "$COLOR1‚îÇ  [ 0 ]  ${WH}Kembali ke Menu Utama       ${NC}"
echo -e "$COLOR1‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò${NC}"
until [[ $core =~ ^[0-9]+$ && ($core -ge 0 && $core -le 2) ]]; do
    read -p "    Pilih opsi [0-2] : " core
done
if [[ "$core" == "1" ]]; then
    clear
    echo -e " "
    cp /usr/local/bin/offixray /usr/local/bin/xray &> /dev/null
    chmod 755 /usr/local/bin/xray
    systemctl restart xray
    echo -e "$COLOR1 [ INFO ] ${WH}Berhasil Mengubah Xray Core Official"
elif [[ "$core" == "2" ]]; then
    clear
    echo -e " "
    cp /usr/local/bin/modxray /usr/local/bin/xray &> /dev/null
    chmod 755 /usr/local/bin/xray
    systemctl restart xray
    echo -e "$COLOR1 [ INFO ] ${WH}Berhasil Mengubah Xray Core Mod "
elif [[ "$core" == "0" ]]; then
    menu # Kembali ke menu utama
fi
read -n 1 -s -r -p "Tekan sembarang tombol untuk kembali ke menu"
menu
}

# =============================================
#           [ FUNGSI CHECK PORT VPS ]
# =============================================
function check-port() {
    clear
    echo -e "${COLOR1}‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê${NC}"
    echo -e "${COLOR1}‚îÇ ${WH}        PEMERIKSAAN PORT VPS           ${NC}"
    echo -e "${COLOR1}‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò${NC}"
    echo -e ""
    echo -e "${WH}Memeriksa port yang terbuka...${NC}"
    echo ""

    # Daftar port umum yang ingin diperiksa
    PORTS=(22 80 443 89 2083 2087 2095 2096 8080 8443) # Tambahkan port lain jika perlu

    for port in "${PORTS[@]}"; do
        echo -ne "Port $port: "
        if nc -zv 127.0.0.1 "$port" &>/dev/null; then
            echo -e "${GREEN}Terbuka (LISTEN)${NC}"
        else
            echo -e "${RED}Tertutup${NC}"
        fi
        sleep 0.1
    done

    echo ""
    read -n 1 -s -r -p "Tekan sembarang tombol untuk kembali ke menu..."
    menu
}

# =============================================
#           [ FUNGSI MENU UTAMA ]
# =============================================
function menu() {
    clear
    # Muat ulang warna jika ada perubahan tema
    load_colors

    # Ambil informasi sistem dan jaringan terbaru
    get_sys_info
    get_net_info
    
    # Tampilkan informasi dan menu secara bersamaan
    echo -e "$COLOR1‚ï≠‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïÆ${NC}"
    echo -e "$COLOR1‚îÇ${NC} ${COLBG1}              ${WH}‚Ä¢ HOKAGE LEGEND PREMIUM ‚Ä¢            ${NC} $COLOR1‚îÇ $NC"
    echo -e "$COLOR1‚ï∞‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïØ${NC}"
    echo -e "$COLOR1‚ï≠‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïÆ${NC}"
    echo -e "$COLOR1‚îÇ $NC${WH}‚ùà Sistem OS           ${COLOR1}: ${WH}$MODEL2"
    echo -e "$COLOR1‚îÇ $NC${WH}‚ùà Penggunaan Memori   ${COLOR1}: ${WH}$uram - $tram"
    echo -e "$COLOR1‚îÇ $NC${WH}‚ùà Core & Penggunaan CPU${COLOR1}: ${WH}$CORE Core & $cpu_usage"
    echo -e "$COLOR1‚îÇ $NC${WH}‚ùà ISP                 ${COLOR1}: ${WH}$ISP"
    echo -e "$COLOR1‚îÇ $NC${WH}‚ùà Kota                ${COLOR1}: ${WH}$CITY"
    echo -e "$COLOR1‚îÇ $NC${WH}‚ùà Domain              ${COLOR1}: ${WH}$(cat /etc/xray/domain)"
    echo -e "$COLOR1‚îÇ $NC${WH}‚ùà IP-VPS              ${COLOR1}: ${WH}$IPVPS${NC}"
    echo -e "$COLOR1‚îÇ $NC${WH}‚ùà Uptime              ${COLOR1}: ${WH}$SERONLINE${NC}"
    echo -e "$COLOR1‚ï∞‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïØ${NC}"
    echo -e "$COLOR1‚ï≠‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚Ä¢ ${NC}${WH}STATUS SERVER${NC}${COLOR1} ‚Ä¢ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïÆ${NC}"
    echo -e " ${WH} SSH WS : ${status_ws} ${WH} XRAY : ${status_xray} ${WH} NGINX : ${status_nginx} ${WH} DROPBEAR : ${status_beruangjatuh}$NC"
    echo -e "$COLOR1‚ï∞‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïØ${NC}"

    # Menu Utama
    echo -e " $COLOR1‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e " $COLOR1‚ïë${NC}${COLBG1}                   ${WH}‚Ä¢ SYSTEM MENU ‚Ä¢                  ${NC}$COLOR1‚ïë $NC"
    echo -e " $COLOR1‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    echo -e " $COLOR1‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e " $COLOR1‚ïë${NC} ${WH}[${COLOR1}01${WH}]${NC} ${COLOR1}‚Ä¢ ${WH}UBAH DOMAIN           ${WH}[${COLOR1}06${WH}]${NC} ${COLOR1}‚Ä¢ ${WH}SETUP BOT INFO      ${WH}$COLOR1‚ïë $NC"
    echo -e " $COLOR1‚ïë${NC} ${WH}[${COLOR1}02${WH}]${NC} ${COLOR1}‚Ä¢ ${WH}UBAH BANNER           ${WH}[${COLOR1}07${WH}]${NC} ${COLOR1}‚Ä¢ ${WH}PERBAIKI NGINX OFF  ${WH}$COLOR1‚ïë $NC"
    echo -e " $COLOR1‚ïë${NC} ${WH}[${COLOR1}03${WH}]${NC} ${COLOR1}‚Ä¢ ${WH}UBAH TEMA SCRIPT      ${WH}[${COLOR1}08${WH}]${NC} ${COLOR1}‚Ä¢ ${WH}CEK CPU VPS         ${WH}$COLOR1‚ïë $NC"
    echo -e " $COLOR1‚ïë${NC} ${WH}[${COLOR1}04${WH}]${NC} ${COLOR1}‚Ä¢ ${WH}UBAH CORE XRAY        ${WH}[${COLOR1}09${WH}]${NC} ${COLOR1}‚Ä¢ ${WH}CEK PORT VPS        ${WH}$COLOR1‚ïë $NC"
    echo -e " $COLOR1‚ïë${NC} ${WH}[${COLOR1}05${WH}]${NC} ${COLOR1}‚Ä¢ ${WH}BERSIHKAN RAM CACHE   ${WH}[${COLOR1}10${WH}]${NC} ${COLOR1}‚Ä¢ ${WH}REBUILD VPS         ${WH}$COLOR1‚ïë $NC"
    echo -e " $COLOR1‚ïë${NC} ${WH}[${COLOR1}00${WH}]${NC} ${COLOR1}‚Ä¢ ${WH}KELUAR                                              ${WH}$COLOR1‚ïë $NC"
    echo -e " $COLOR1‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    echo -e ""
    echo -ne " ${WH}Pilih menu ${COLOR1}: ${WH}"; read opt
    case $opt in
    01 |1) clear ; domain ;;
    02 |2) clear ; nano /etc/issue.net && chmod +x /etc/issue.net ; menu ;;
    03 |3) clear ; m-theme ;; # Panggil m-theme jika ingin mengubah tema
    04 |4) clear ; coremenu ;;
    05 |5) clear ; clearcache ;;
    06 |6) clear ; bot2 ;;
    07 |7) clear ; certv2ray ;;
    08 |8) clear ; gotopp ;;
    09 |9) clear ; check-port ;;
    10 |10) clear ; wget -q https://github.com/hokagelegend9999/genom/raw/refs/heads/main/install-ulang-vps && bash install-ulang-vps ; menu ;;
    00 |0) clear ; exit ;;
    *) echo -e "" ; echo -e "${RED}Pilihan tidak valid!${NC}" ; sleep 1 ; menu ;;
    esac
}

# =============================================
#           [ EKSEKUSI SCRIPT UTAMA ]
# =============================================

# Muat warna pertama kali
load_colors

# Setelah validasi lisensi, langsung panggil fungsi menu utama.
# Fungsi menu utama akan bertanggung jawab untuk menampilkan semua informasi
# dan menu secara bersamaan.
menu
